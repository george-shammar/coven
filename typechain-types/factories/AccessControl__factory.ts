/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AccessControl, AccessControlInterface } from "../AccessControl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lensHub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotInitImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestorAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "hasAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000805534801561001457600080fd5b5060405161037d38038061037d83398101604081905261003391610048565b306080526001600160a01b031660a052610078565b60006020828403121561005a57600080fd5b81516001600160a01b038116811461007157600080fd5b9392505050565b60805160a0516102e161009c6000396000607a0152600061011d01526102e16000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309cebe761461003b5780638129fc1c14610062575b600080fd5b61004e6100493660046101ba565b61006c565b604051901515815260200160405180910390f35b61006a610119565b005b6000836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e856040518263ffffffff1660e01b81526004016100c691815260200190565b602060405180830381865afa1580156100e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101079190610287565b6001600160a01b031614949350505050565b60017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610165576040516325c7410560e21b815260040160405180910390fd5b6000548111610187576040516302ed543d60e51b815260040160405180910390fd5b600055565b6001600160a01b03811681146101a157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156101cf57600080fd5b83356101da8161018c565b925060208401359150604084013567ffffffffffffffff808211156101fe57600080fd5b818601915086601f83011261021257600080fd5b813581811115610224576102246101a4565b604051601f8201601f19908116603f0116810190838211818310171561024c5761024c6101a4565b8160405282815289602084870101111561026557600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561029957600080fd5b81516102a48161018c565b939250505056fea264697066735822122041ccb5103d924a0c2d42d1c3b4290533746f0e1edf44d68afc69b32c0b7000e164736f6c634300080a0033";

type AccessControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControl__factory extends ContractFactory {
  constructor(...args: AccessControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _lensHub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControl> {
    return super.deploy(_lensHub, overrides || {}) as Promise<AccessControl>;
  }
  getDeployTransaction(
    _lensHub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lensHub, overrides || {});
  }
  attach(address: string): AccessControl {
    return super.attach(address) as AccessControl;
  }
  connect(signer: Signer): AccessControl__factory {
    return super.connect(signer) as AccessControl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlInterface {
    return new utils.Interface(_abi) as AccessControlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControl {
    return new Contract(address, _abi, signerOrProvider) as AccessControl;
  }
}
